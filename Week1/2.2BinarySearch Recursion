//Given an already sorted array of positive integers, design an algorithm and implement it using a
//program to find whether a given key element is present in the array or not. Also, find the total
//number of comparisons for each input case.
//(Time Complexity = O(logn), where n is the size of input).
#include<iostream>
using namespace std;
int searchb(int *nums, int target,int left,int right,int c) {
        if(left<=right){
         c=c+1;
         int mid=left+(right-left)/2;
         if(target==nums[mid]){
                 cout<<"Present ";
             return c;}
         else if(nums[mid]>target)
             return searchb(nums,target,left,mid-1,c);
         else
             return searchb(nums,target,mid+1,right,c);}
     cout<<"Not Present ";
     return c;
    }
int main(){
int n,x,c=0,i;
cout<<"Enter the limit of element of the array"<<endl;
cin>>n;
int a[n];

cout<<"Enter the element into array"<<endl;
for(i=0;i<n;i++)
{
cin>>a[i];
}
cout<<"Enter the element to be found"<<endl;
cin>>x;
cout<<searchb(a,x,0,n-1,c);
return 0;
}
